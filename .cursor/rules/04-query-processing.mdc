---
description:
globs:
alwaysApply: false
---
# CarbonSense Query Processing

This rule describes how CarbonSense processes queries through different approaches.

## Query Methods

CarbonSense supports multiple query methods:

1. **Text-Based Queries**:
   - Standard RAG agent: `python -m src.carbonsense.main --mode rag_agent`
   - CrewAI-based: `python -m src.carbonsense.main --mode crew_agent`

2. **Voice Queries**:
   - Standard voice: `python -m src.carbonsense.main --mode stt_query`
   - CrewAI voice: `python -m src.carbonsense.main --mode stt_crew_agent`

3. **Web Interface Queries**:
   - Interactive dashboard with text and voice input options

## Processing Pipeline

The query processing follows these steps:

1. **Query Parsing**:
   - Extract products and quantities
   - Identify query intent
   - Standardize units and formatting

2. **Vector Search**:
   - Search Milvus vector database using embeddings
   - Confidence scoring of results

3. **Web Search Fallback**:
   - If database results are insufficient, query Watson Discovery
   - Search trusted online sources

4. **Response Generation**:
   - Format carbon calculations
   - Provide environmental context
   - Cite information sources
   - Include confidence scores

## Key Components

- [src/carbonsense/core/carbon_flow.py](mdc:src/carbonsense/core/carbon_flow.py) - Core query processing pipeline
- [src/carbonsense/core/crew_agent.py](mdc:src/carbonsense/core/crew_agent.py) - Multi-agent orchestration
- [src/carbonsense/core/carbon_agent.py](mdc:src/carbonsense/core/carbon_agent.py) - Standard RAG agent implementation
